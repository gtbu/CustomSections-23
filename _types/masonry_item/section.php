<?php 
defined('is_running') or die('Not an entry point...');

/**
 * Section processing PHP script for Custom Section type 'Masonry Item'
 * for Typesetter CMS developer plugin 'Custom Sections'
 *
 */

$section = array();

$default_image = $sectionRelativeCode . '/images/default_image.jpg';

$section['values'] = array_merge(array(
  'image'           => $default_image,        // control_type = finder_select
  'title'           => 'Titel',               // control_type = text
  'text'            => 'Beschreibung',        // control_type = text
  'price'           => 'XXX,XX â‚¬',            // control_type = text
  'vignette'        => '0',                   // control_type = checkbox
  'ratio_classes'   => 'aspect-native',       // control_type = radio_group
), $sectionCurrentValues );

$section['attributes'] = array(
  // 'class' => '',
  // 'style' => '',
);


// inner wrapper
$inner_wrapper_classes = array('masonry-item-inner-wrapper');
$inner_wrapper_classes[] = $section['values']['ratio_classes'];
if( $section['values']['vignette'] == '1' ){
  $inner_wrapper_classes[] = 'image-vignette';
}
$inner_wrapper_classes = implode(' ', $inner_wrapper_classes);;


// thumbnail
if( $section['values']['image'] == $default_image ){
  $thumbnail = $default_image; // our default image doesn't have a Typesetter thumbnail
}else{
  $thumbnail = \gp\tool::ThumbnailPath($section['values']['image']);
}


// Required: Secton content
$section['content']  = 
  '<div class="' . $inner_wrapper_classes . '">'
.   '<a class="masonry-item-thumbnail-wrapper" href="' . $section['values']['image'] . '">'
.     '<img class="masonry-item-thumbnail" '
// .       'data-original-src="' . $section['values']['image'] . '" '
.       'src="' . $thumbnail . '" '
.     '/>'
.   '</a>'
.   '<div class="masonry-item-title">{{title}}</div>'
.   '<div class="masonry-item-text">{{text}}</div>'
.   '<div class="masonry-item-price">{{price}}</div>'
. '</div>';

// Recommended: Section Label. If not defined, it will be generated from the folder name.
$section['gp_label'] = 'Masonry Bild';

// Optional: Always process values - if set to true, content will always be generated by processing values, even when not logged-in.
// Using this option, sections may have dynamic content.
$section['always_process_values'] = false;

// Optional: Admin UI color label. This is solely used in the editor's section manager ('Page' mode)
$section['gp_color'] = '#c4c700';

// Optional: Loadable Components needed for rendering section to visitors, see https://github.com/Typesetter/Typesetter/blob/master/include/tool/Output/Combine.php#L111
$components = 'colorbox'; // comma separated string. If 'colorbox' is included \gp\tool::AddColorBox() will be called

// Ootional: Additional CSS and JS if needed
$css_files = array( 'style.css', ); // style.css must reside in this directory (_types/exent_box). Relative and absolute paths are also possible

// $style = 'body { background:red!important; }';

$js_files = array( 'script.js', ); // script.js must reside in this directory (_types/exent_box). Relative and absolute paths are also possible.

// $javascript = 'var hello_world = "Hello World!";'; // this will add a global js variable 

// $jQueryCode = '$(".hello").on("click", function(){ alert("Click: " + hello_world); });';


/* ############################################################## */
/* ## EXAMPLES for JS to be executed when a section is updated ## */
/* ############################################################## */

/* Example for CurrenSections.onUpdate() function. 'this' refers to the section's jQuery object in the functions context: */
// $javascript = 'CustomSections = { onUpdate : function(){ console.log("CustomSections.onUpdate function called for ", $(this));} };'; 

/* Example for using the delegated CustomSection:updated event */
// $jQueryCode = '$(document).on("CustomSection:updated", "div.GPAREA", function(){ console.log("The event \"CustomSection:updated\" was triggered on section ", $(this)); });'; 

